#==========================================================================
# Description: Compile kernel
#==========================================================================

name: Compile release general kernel

on:
  workflow_dispatch:

env:
  TZ: Asia/Jakarta

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "${TZ}"
            
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Compile Kernel
        id: compile
        run: |
          echo -e "running path: [ ${PWD} ]"
          cd ..

          kernel_outpath="compile-kernel/output"
          
          sudo ./recompile -k 5.4.0 -a true

          echo -e "running path After Compile: [ ${PWD} ]"

          output_tags="$(ls -l ${PWD}/${kernel_outpath}/*.tar.gz | awk '{print $9}' | grep -oE '[1-9][0-9]{0,2}\.[0-9]{1,3}\.[0-9]+' | xargs | tr "[ ]" "_")"
          echo -e "Output environment variables."
          echo "PACKAGED_OUTPUTTAGS=${output_tags}" >> ${GITHUB_ENV}
          echo "PACKAGED_OUTPUTPATH=${PWD}/${kernel_outpath}" >> ${GITHUB_ENV}
          echo "PACKAGED_OUTPUTDATE=$(date +"%m.%d.%H%M")" >> ${GITHUB_ENV}
          echo "PACKAGED_STATUS=success" >> ${GITHUB_ENV}
          echo -e "PACKAGED_OUTPUTTAGS: ${output_tags}"
          echo -e "PACKAGED_OUTPUTPATH: ${PWD}/${kernel_outpath}"
          echo -e "PACKAGED_OUTPUTDATE: $(date +"%m.%d.%H%M")"
          echo -e "PACKAGED_STATUS: success"
          echo -e "PACKAGED_OUTPUTPATH files list: \n$(ls -l ${PWD}/${kernel_outpath} 2>/dev/null)"

          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Upload Kernel to Release
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: kernel_stable
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            - The kernel can be used to compile Armbian and OpenWrt.
            - Add support rtw88 including 8821cu, 8821cs, 8822cu, 8822bu, 8822bu, etc...
